var Observer=new Class({Implements:[Options,Events],options:{periodical:false,delay:1000},initialize:function(el,onFired,options){this.setOptions(options);this.addEvent('onFired',onFired);this.element=$(el)||$$(el);this.boundChange=this.changed.bind(this);this.resume();},changed:function(){var value=this.element.get('value');if((this.value==value||JSON.encode(this.value)==JSON.encode(value)))return;this.clear();this.value=value;this.timeout=this.onFired.delay(this.options.delay,this);},setValue:function(value){this.value=value;this.element.set('value',value);return this.clear();},onFired:function(){this.fireEvent('onFired',[this.value,this.element]);},clear:function(){$clear(this.timeout||null);return this;},pause:function(){$clear(this.timeout);$clear(this.timer);this.element.removeEvent('keyup',this.boundChange);return this;},resume:function(){this.value=this.element.get('value');if(this.options.periodical)this.timer=this.changed.periodical(this.options.periodical,this);else this.element.addEvent('keyup',this.boundChange);return this;}});